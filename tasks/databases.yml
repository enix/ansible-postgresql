---

- name: Ensure PostgreSQL databases are present.
  postgresql_db:
    name: "{{ item.name }}"
    lc_collate: "{{ item.lc_collate | default('en_US.UTF-8') }}"
    lc_ctype: "{{ item.lc_ctype | default('en_US.UTF-8') }}"
    encoding: "{{ item.encoding | default('UTF-8') }}"
    template: "{{ item.template | default('template0') }}"
    owner: "{{ item.owner | default(postgresql__user) }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ postgresql__databases }}"
  become: true
  become_user: "{{ postgresql__user }}"
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true

- name:
  postgresql_ext:
    db: "{{ item.name }}"
    name: "{{ item.extension | default(omit) }}"
  with_items: "{{ postgresql__databases }}"
  when: item.extension is defined
  become: true
  become_user: "{{ postgresql__user }}"
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true
